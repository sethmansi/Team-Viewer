
import java.awt.Color;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;
import java.util.ArrayList;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import static javax.swing.UIManager.get;
import javax.swing.table.AbstractTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author mansi_pc
 */
public class NewJFrame extends javax.swing.JFrame {

    ArrayList<String> al = new ArrayList();
    MyTableModel tm;
    MyTableModel1 tm1;
    int x = 50;
    int y = 50;
    ArrayList<String> bl = new ArrayList();

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {

        tm = new MyTableModel();
        tm1 = new MyTableModel1();
        // String s;
        initComponents();
        jButton2.setEnabled(false);
        setSize(1000, 1000);
        
        jButton4.setVisible(false);
        jButton5.setVisible(false);
        jButton3.setEnabled(false);
        //JOptionPane.showMessageDialog(this,"enter the first 3 slots of ip address in the textfield1"); //rmove
        // s = jTextField1.getText();//remove
        //String s;
        //remove
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jButton1.setText("SCANNING..");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(50, 110, 140, 23);

        jTable1.setModel(tm);
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 160, 240, 210);

        jButton2.setText("AVAILABLE SYSTEMS");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(360, 110, 160, 23);

        jTable2.setModel(tm1);
        jScrollPane2.setViewportView(jTable2);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(320, 160, 250, 210);

        jButton3.setText("View Remote System");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(600, 260, 150, 23);

        jButton4.setText("Shut Down");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4);
        jButton4.setBounds(610, 180, 110, 23);

        jButton5.setText("Send Message");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5);
        jButton5.setBounds(610, 220, 120, 23);

        jLabel1.setText("IP HERE");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(100, 20, 80, 30);
        getContentPane().add(jTextField1);
        jTextField1.setBounds(190, 20, 140, 30);

        jPanel1.setPreferredSize(new java.awt.Dimension(780, 1000));
        jScrollPane3.setViewportView(jPanel1);

        getContentPane().add(jScrollPane3);
        jScrollPane3.setBounds(20, 430, 780, 250);

        jLabel2.setText("or view by double ckicking the icon");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(590, 290, 230, 30);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        al.clear();
        tm.fireTableDataChanged();

        new Thread(new Runnable() {
            public void run() {
                Thread t[] = new Thread[256];
                for (int i = 1; i < 255; i++) {
                    final int j = i;
                    t[i] = new Thread(new Runnable() {

                        @Override
                        public void run() {
                            try {
                                String octet_ip = jTextField1.getText();
                                System.out.println(octet_ip + "." + j);
                                Process p;

                                //System.out.println("Checking for 192.168.43" + j);
                                //System.out.println("Checking for"+s+j);
                                p = Runtime.getRuntime().exec("ping " + octet_ip + "." + j);
                                // p = Runtime.getRuntime().exec("ping " + sj);  
                                BufferedReader br = new BufferedReader(new InputStreamReader(p.getInputStream()));

                                while (true) {
                                    String s = br.readLine();
                                    if (s == null) {
                                        break;
                                    }
                                    //System.out.println(s);
                                    if (s.indexOf("TTL") != -1) {
                                        al.add(octet_ip + "." + j);
                                        // al.add(sj);  
                                        tm.fireTableDataChanged();
                                        break;
                                    }
                                }

                            } catch (IOException e) {
                            }
                        }
                    });

                    t[i].start();
                }
                for (int k = 1; k < 255; k++) {
                    try {
                        t[k].join();

                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                }
                JOptionPane.showMessageDialog(null, "Click Available Systems To Connect");
                jButton2.setEnabled(true);
                System.out.println("printing arraylist");
                int n = al.size();
                for (int l = 0; l < n; l++) {
                    System.out.println(al.get(l));

                }
            }

        }).start();

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        bl.clear();
        tm1.fireTableDataChanged();

        jPanel1.removeAll();
        jPanel1.repaint();
        x = 50;
        y = 50;
        new Thread(new Runnable() {
            public void run() {

                for (int i = 1; i < al.size(); i++) {
                    final String ip = al.get(i);
                    System.out.println("Checking for " + ip);
                    new Thread(new Runnable() {
                        public void run() {
                            try {
                                Socket sock = new Socket(ip, 8005);
                                BufferedReader br = new BufferedReader(new InputStreamReader(sock.getInputStream()));
                                PrintWriter pw = new PrintWriter(sock.getOutputStream());
                                pw.println("checking server");
                                pw.flush();

                                String s = br.readLine();
                                System.out.println("connected to " + ip);
                                System.out.println(s);
                                if (s.equals("Hello")) {
                                    bl.add(ip);
                                    tm1.fireTableDataChanged();

                                    JButton b = new JButton(ip);

                                    b.setIcon(new javax.swing.ImageIcon("C:\\Users\\mansi_pc\\Pictures\\Capture.PNG"));
                                    b.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                                    b.setVerticalAlignment(javax.swing.SwingConstants.TOP);
                                     b.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
                                    b.setMargin(new java.awt.Insets(2, 2, 2, 2));
                                    b.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
                                    b.setBackground(new java.awt.Color(255, 255, 255));
                                    jPanel1.add(b);

                                    b.addActionListener(new java.awt.event.ActionListener() {
                                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                            for (int j = 0; j < jPanel1.getComponentCount(); j++) {
                                                if (jPanel1.getComponent(j) == evt.getSource()) {
                                                    jButton4.setVisible(true);
                                                    jButton5.setVisible(true);
                                                   
                                                    b.setBackground(Color.red);
                                                } else {
                                                    jPanel1.getComponent(j).setBackground(Color.white);
                                                }
                                            }
                                            
                                        }
                                    });

                                    b.addMouseListener(new java.awt.event.MouseAdapter() {
                                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                            bMouseClicked(evt);
                                        }
                                    });
                                    b.setBounds(x, y, 150, 80);
                                    jPanel1.repaint();
                                    x = x + 210;

                                   
                                    if (bl.size() % 3 == 0) {
                                        x = 50;
                                        y = y + 100;

                                    }
                                  
                                } 
                            } catch (Exception e) {
                                System.out.println("no server at" + ip);
//                    e.printStackTrace();
                            }

                        }
                    }).start(); //                        tm1.fireTableDataChanged();
             
                }

            }

        }).start();
        
        jButton3.setEnabled(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void bMouseClicked(java.awt.event.MouseEvent evt) {
        
        if (evt.getClickCount() == 2) {
            ((JButton) evt.getSource()).setBackground(Color.BLUE);
              System.out.println("view");
               new RemoteFrame(((JButton)(evt.getSource())).getText()).setVisible(true);
        }
 }


    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int n = jTable2.getSelectedRow();
        String ip=null;
        if (n == -1) {
            JOptionPane.showMessageDialog(rootPane, "Select a remote System to view");
        } else {
            ip= bl.get(n);
        }


    }//GEN-LAST:event_jButton3ActionPerformed
    public class CommandClient {

        BufferedReader br;
        PrintWriter pw;

        public CommandClient(String ip) {
            try {
                Socket sock = new Socket(ip, 8005);
                br = new BufferedReader(new InputStreamReader(sock.getInputStream()));
                pw = new PrintWriter(sock.getOutputStream());
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        //int n = jTable2.getSelectedRow();
        boolean flag= false;
        String shutip = null;
        
       // String ip= null;                     //re
        for(int i =0;i< jPanel1.getComponentCount(); i++)
        { if(jPanel1.getComponent(i).getBackground()== Color.red)
           
        { flag=true;     
       // jButton4.setVisible(true); //re
        shutip= ((JButton)(jPanel1.getComponent(i))).getText();
        CommandClient cc = new CommandClient(shutip);
        cc.pw.println("Shut Down");
            cc.pw.flush();
            break;
        
        }
        }
        
        if (flag==false){
            JOptionPane.showMessageDialog(rootPane, "Select a remote System to view");}
        //if (n==-1){
        //    JOptionPane.showMessageDialog(rootPane, "Select a remote System to view");
        //} else {
        //    shutip = bl.get(n);
        //    CommandClient cc = new CommandClient(shutip);
        //    cc.pw.println("Shut Down");
        //    cc.pw.flush();
         //   this.dispose();
       // }

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        boolean flag= false;
        String ip = null;
        
        
        for(int i =0;i< jPanel1.getComponentCount(); i++)
        { 
            if(jPanel1.getComponent(i).getBackground()== Color.red)
                
        { flag =true;
       // jButton5.setVisible(true);
        ip= ((JButton)(jPanel1.getComponent(i))).getText();
        pqr p= new pqr(ip);
        p.setSize(500,500);
        p.setVisible(true);
       p.jLabel1.setText("message sending to"+ip);
       break;
        }
            if(flag==false)
            {
                JOptionPane.showMessageDialog(null,"choose remote system");
            }}

        //if (n == -1) {
        //    JOptionPane.showMessageDialog(rootPane, "Select a remote System to message");
      //  } else {
      //      String checkip = bl.get(n);
      //      pqr p = new pqr(checkip);
      //      p.setVisible(true);
      //      p.setSize(600, 600);
      //      p.jLabel1.setText("sending message to " + checkip);
      //  }

    }//GEN-LAST:event_jButton5ActionPerformed

    public class pqr extends javax.swing.JFrame {

        String ip;

        /**
         * Creates new form pqr
         */
        public pqr(String ip) {
            this.ip = ip;
            initComponents();
        }

        /**
         * This method is called from within the constructor to initialize the
         * form. WARNING: Do NOT modify this code. The content of this method is
         * always regenerated by the Form Editor.
         */
        @SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
        private void initComponents() {

            jLabel1 = new javax.swing.JLabel();
            jLabel2 = new javax.swing.JLabel();
            jScrollPane1 = new javax.swing.JScrollPane();
            jTextArea1 = new javax.swing.JTextArea();
            jButton1 = new javax.swing.JButton();

            setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

            jLabel1.setText("jLabel1");

            jLabel2.setText(" MESSAGE");

            jTextArea1.setColumns(20);
            jTextArea1.setRows(5);
            jScrollPane1.setViewportView(jTextArea1);

            jButton1.setText("SEND");
            jButton1.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton1ActionPerformed(evt);
                }
            });

            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
            getContentPane().setLayout(layout);
            layout.setHorizontalGroup(
                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                            .addGap(114, 114, 114)
                                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                            .addContainerGap()
                                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(39, 39, 39)
                                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addContainerGap(81, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGap(0, 0, Short.MAX_VALUE)
                            .addComponent(jButton1)
                            .addGap(236, 236, 236))
            );
            layout.setVerticalGroup(
                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                            .addGap(20, 20, 20)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(38, 38, 38)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                            .addComponent(jButton1)
                            .addGap(20, 20, 20))
            );

            pack();
        }// </editor-fold>                        

        private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
            CommandClient cc = new CommandClient(ip);
            cc.pw.println("Send Message");
            cc.pw.println(jTextArea1.getText());
            cc.pw.flush();

        }

        /**
         * @param args the command line arguments
         */
        // Variables declaration - do not modify                     
        private javax.swing.JButton jButton1;
        private javax.swing.JLabel jLabel1;
        private javax.swing.JLabel jLabel2;
        private javax.swing.JScrollPane jScrollPane1;
        private javax.swing.JTextArea jTextArea1;
        // End of variables declaration                   
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    class MyTableModel extends AbstractTableModel {

        public int getRowCount() {
            return al.size();
        }

        public int getColumnCount() {
            return 1;
        }

        public Object getValueAt(int rowIndex, int ColumnIndex) {
            return al.get(rowIndex);
        }

        public String getColumnName(int column) {
            return "IP addresses";
        }
    }

    class MyTableModel1 extends AbstractTableModel {

        public int getRowCount() {
            return bl.size();
        }

        public int getColumnCount() {
            return 1;

        }

        public Object getValueAt(int rowIndex, int ColumnIndex) {

            return bl.get(rowIndex);
        }

        public String getColumnName(int column) {
            return "list of connected IP addresses";
        }

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
